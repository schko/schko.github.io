<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning and Video</title>
    <link>http://schko.github.io/</link>
    <description>Recent content on Machine Learning and Video</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Sharath Koorathota</copyright>
    <lastBuildDate>Mon, 20 Jan 2020 12:53:20 -0500</lastBuildDate>
    
        <atom:link href="http://schko.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>about me</title>
      <link>http://schko.github.io/about/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://schko.github.io/about/about/</guid>
      
        <description>
&lt;link rel=&#34;stylesheet&#34; href=&#34;http://schko.github.io/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34;&gt;
&lt;figure  class=&#34;right&#34;  itemprop=&#34;associatedMedia&#34;
  itemscope itemtype=&#34;http://schema.org/ImageObject&#34; 
  style=&#34;max-width:35%&#34; &gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;http://schko.github.io/img/smk.JPG&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;http://schko.github.io/img/smk.JPG&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&#34;professional&#34;&gt;professional&lt;/h3&gt;
&lt;p&gt;creative director/researcher at &lt;a href=&#34;https://www.fractal.nyc&#34;&gt;fractal media&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;graduate researcher at &lt;a href=&#34;http://liinc.bme.columbia.edu/&#34;&gt;laboratory for intelligent imaging and neural computing&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;academic&#34;&gt;academic&lt;/h3&gt;
&lt;p&gt;ph.d. &lt;a href=&#34;http://bme.columbia.edu&#34;&gt;biomedical engineering&lt;/a&gt; at columbia university (in progress)&lt;/p&gt;
&lt;p&gt;m.s. &lt;a href=&#34;https://www.cs.columbia.edu/&#34;&gt;computer science&lt;/a&gt; at columbia university&lt;/p&gt;
&lt;p&gt;b.s. &lt;a href=&#34;http://www.sas.rochester.edu/bcs/&#34;&gt;brain and cognitive sciences&lt;/a&gt; at university of rochester&lt;/p&gt;
&lt;p&gt;b.a. &lt;a href=&#34;http://www.sas.rochester.edu/eco/index.html&#34;&gt;economics&lt;/a&gt; at university of rochester&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Contact:
&lt;a href=&#34;mailto:munna@fractal.nyc&#34;&gt;Email&lt;/a&gt; |
&lt;a href=&#34;https://github.com/schko&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>extending a python application using django</title>
      <link>http://schko.github.io/post/web-dev-django/</link>
      <pubDate>Mon, 20 Jan 2020 12:53:20 -0500</pubDate>
      
      <guid>http://schko.github.io/post/web-dev-django/</guid>
      
        <description>&lt;p&gt;We recently demoed an &lt;a href=&#34;http://fractal.nyc/fovea&#34;&gt;eye tracking concept&lt;/a&gt; that uses gaze and pupil patterns to modify video in real time, but are in the process of making it work on any browser.&lt;/p&gt;
&lt;p&gt;This comes with challenges, including having communication channels between frontend (i.e. browser) and backend (i.e. Python). &lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; makes this process smooth, but comes with a steep learning curve if you are not familiar with software development.&lt;/p&gt;
&lt;h1 id=&#34;a-helpful-tutorial&#34;&gt;a helpful tutorial&lt;/h1&gt;
&lt;p&gt;If you face a similar challenge: &lt;strong&gt;expanding a Python application to work with a web interface,&lt;/strong&gt; then I recommend you start with the &lt;a href=&#34;https://channels.readthedocs.io/en/latest/tutorial/index.html&#34;&gt;Django chat server application&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;CodingEntrepreneur&#39;s &lt;a href=&#34;https://www.youtube.com/watch?v=RVH05S1qab8&#34;&gt;WebSockets walk-through&lt;/a&gt; was especially useful if you want to understand how data is transferred throughout the Django framework.&lt;/p&gt;
&lt;p&gt;Some aspects we (so far) found most useful in this tutorial are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;concept&lt;/th&gt;
&lt;th&gt;definition&lt;/th&gt;
&lt;th&gt;what it&#39;s used for in the tutorial&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;web server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;software or hardware dedicated to running satisfying World Wide Web client requests&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;storage of web pages associated with running a chat room&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caching&lt;/td&gt;
&lt;td&gt;&lt;code&gt;software component that stores data so that future requests for that data&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;speeding up accessing images or chats already seen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;relational database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;set of formally described tables from which data can be accessed or reassembled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;storage of chats that can only be accessed by each user&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;object-oriented python backend&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&#39;s state changed only by it&#39;s behaviors, methods that actually validate and change the state&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;easily readable and modifiable models that work with html and js frontend&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;websockets&lt;/td&gt;
&lt;td&gt;&lt;code&gt;computer communications protocol, providing full-duplex communication channels over a single TCP connection&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;channels that allow transfer of data and commands between the front and backends&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;diagram-of-the-data-transfer&#34;&gt;diagram of the data transfer&lt;/h1&gt;
&lt;p&gt;Below is a very rough diagram of how all the parts fit together for the chat application, but which applies to a large number of problems.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://schko.github.io/img/chat_app_summary.jpg&#34; alt=&#34;Chat app Django framework&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-interesting-parts-from-the-diagram-above&#34;&gt;the interesting parts (from the diagram above)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The viewer &lt;strong&gt;views&lt;/strong&gt; file receives and adds to the &lt;strong&gt;Frontend&lt;/strong&gt;, e.g. viewing a chat screen and submitting a message,&lt;/li&gt;
&lt;li&gt;The Python &lt;strong&gt;views.py&lt;/strong&gt; file contributes to the HTML by loading a template, filling a context and returning an HttpResponse object that modifies the html,&lt;/li&gt;
&lt;li&gt;The HTML initializes and opens a websocket and defines its behavior (i.e. when it executes),&lt;/li&gt;
&lt;li&gt;Python communicates with the socket through the &lt;strong&gt;consumers.py&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;The user does something (e.g. submits a message) on the interface that is received by the consumers &lt;strong&gt;receive&lt;/strong&gt; function,&lt;/li&gt;
&lt;li&gt;The receive function does something (e.g. modifies the message), and sends back a message using the &lt;strong&gt;receive&lt;/strong&gt; message,&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;onmessage&lt;/strong&gt; modifies the HTML in some way (e.g. posts the new message into a form that is viewable by the viewer).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this way, we get communication between a viewer, website, server, and storage (usually accessed and defined through a relational database in the &lt;strong&gt;models&lt;/strong&gt; file).&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>hugo resources</title>
      <link>http://schko.github.io/post/resources/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://schko.github.io/post/resources/</guid>
      
        <description>&lt;p&gt;Some basic Hugo resources that I keep coming back to.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xianmin/hugo-theme-jane&#34;&gt;Jane&lt;/a&gt; theme for this webpage.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.xianmin.org/hugo-theme-jane/post/jane-theme-preview/&#34;&gt;Markdown shortcuts&lt;/a&gt; for the Jane theme.&lt;/li&gt;
&lt;li&gt;Another great &lt;a href=&#34;https://sourceforge.net/p/hugo-generator/wiki/markdown_syntax&#34;&gt;Markdown shortcuts&lt;/a&gt; resource&lt;/li&gt;
&lt;li&gt;Summary of the &lt;a href=&#34;https://www.jakewiesler.com/blog/hugo-directory-structure/&#34;&gt;Hugo file structure&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
  </channel>
</rss>
